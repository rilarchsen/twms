@model TimeWorkedManagementSystem.Models.Shift

@{
    ViewData["Title"] = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";

    string FormatDateTime(DateTime d) => $"{d.Year}-{d.Month.ToString().PadLeft(2, '0')}-{d.Day.ToString().PadLeft(2, '0')}T{d.Hour.ToString().PadLeft(2, '0')}:{d.Minute.ToString().PadLeft(2, '0')}:{d.Second.ToString().PadLeft(2, '0')}";

    ViewData["TotalTime"] = $"{((int)(Model.TotalTime.TotalHours)).ToString().PadLeft(2, '0')}:{Model.TotalTime.Minutes.ToString().PadLeft(2, '0')}:{Model.TotalTime.Seconds.ToString().PadLeft(2, '0')}";
    ViewData["WorkTime"] = $"{((int)(Model.WorkTime.TotalHours)).ToString().PadLeft(2, '0')}:{Model.WorkTime.Minutes.ToString().PadLeft(2, '0')}:{Model.WorkTime.Seconds.ToString().PadLeft(2, '0')}";
    ViewData["BreakTime"] = $"{((int)(Model.BreakTime.TotalHours)).ToString().PadLeft(2, '0')}:{Model.BreakTime.Minutes.ToString().PadLeft(2, '0')}:{Model.BreakTime.Seconds.ToString().PadLeft(2, '0')}";
    
}

<h1>Edit</h1>

<h4>Shift</h4>
<hr />
<div class="row">
    
        <form method="post">
        <div class="col-md-4">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <input type="hidden" asp-for="UserId" />
            <div class="form-group">
                <label asp-for="Start" class="control-label"></label>
                <input asp-for="Start" class="form-control" />
                <span asp-validation-for="Start" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="End" class="control-label"></label>
                <input asp-for="End" class="form-control" />
                <span asp-validation-for="End" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CompanyId" class="control-label">Company</label>
                <select asp-for="CompanyId" class="form-control" asp-items="ViewBag.CompanyId"></select>
                <span asp-validation-for="CompanyId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="TotalTime" class="control-label"></label>
                <input asp-for="TotalTime" class="form-control" type="text" value="@ViewData["TotalTime"]" readonly="true" />
            </div>
            <div class="form-group">
                <label asp-for="WorkTime" class="control-label"></label>
                <input asp-for="TotalTime" class="form-control" type="text" value="@ViewData["WorkTime"]" readonly="true" />
            </div>
            <div class="form-group">
                <label asp-for="BreakTime" class="control-label"></label>
                <input asp-for="TotalTime" class="form-control" type="text" value="@ViewData["BreakTime"]" readonly="true" />
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" asp-action="Edit" style="margin-top:10px;margin-bottom:10px;width:100%;"/>
            </div>

        </div>
        <hr />
            <dl class="row">
                <dl class="row">
                    <div style="display:flex; align-items:center">
                        <dt class="col-sm-2">
                        <h5>@Html.DisplayNameFor(model => model.Breaks)</h5>
                        
                        </dt>
                        
                    </div>

                </dl>
                <div style="display:flex; flex-wrap: wrap;">
                @{
                    int breakCounter = 0;
                    foreach (var breakItem in Model.Breaks)
                    {
                        <div class="row" style="border-style:solid;border-radius:10px;border-width:2px;margin:10px;padding:10px;width:30%;">
                            
                            <input type="hidden" asp-for="Breaks[breakCounter].Id" value="@breakItem.Id" /><br />
                            <input type="hidden" asp-for="Breaks[breakCounter].ShiftId" value="@breakItem.ShiftId" /><br />
                            <input type="hidden" asp-for="Breaks[breakCounter].UserId" value="@breakItem.UserId" /><br />
                            <div class="form-group">
                                <span asp-validation-for="Breaks[breakCounter]" class="text-danger"></span>
                                <label asp-for="Breaks[breakCounter].Start" class="control-label"></label>
                                <input asp-for="Breaks[breakCounter].Start" class="form-control" value="@FormatDateTime(breakItem.Start)" /><br />
                                <span asp-validation-for="Breaks[breakCounter].Start" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label asp-for="Breaks[breakCounter].End" class="control-label"></label>
                                <input asp-for="Breaks[breakCounter].End" class="form-control" value="@FormatDateTime(breakItem.End)" /><br />
                                <span asp-validation-for="Breaks[breakCounter].End" class="text-danger"></span>
                            </div>
                            <input type="submit" value="Remove" class="btn btn-primary" asp-action="DeleteBreak" asp-route-breakId="@breakItem.Id" />
                        </div>
                        breakCounter++;
                    }
                }
                </div>
            <input type="submit" value="Add break" class="btn btn-primary" asp-action="AddBreak" asp-route-breakId="Id" style="margin:10px" />
            </dl>

        </form>
            
            
            

    
</div>




<div>
    <a asp-action="Index">Back to List</a>
</div>

<style>
    .form-group {
        margin-top:10px;
    }

    label {
        font-weight: bold;
    }
</style>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
